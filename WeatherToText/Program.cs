// <copyright file="Program.cs" company="PublicDomain.com">
//     CC0 1.0 Universal (CC0 1.0) - Public Domain Dedication
//     https://creativecommons.org/publicdomain/zero/1.0/legalcode
// </copyright>
// <auto-generated />

namespace WeatherToText
{
    // Directives
    using System;
    using System.Net;
    using System.IO;
    using HtmlAgilityPack;
    using System.Text.RegularExpressions;
    using System.Collections.Generic;
    using ConsoleTableExt;

    /// <summary>
    /// Main class.
    /// </summary>
    class MainClass
    {
        /// <summary>
        /// The regex.
        /// </summary>
        private static readonly Regex regex = new Regex(@"\s+", RegexOptions.Compiled);

        /// <summary>
        /// The entry point of the program, where the program control starts and ends.
        /// </summary>
        /// <param name="args">The command-line arguments.</param>
        private static void Main(string[] args)
        {
            // Catch errors
            try
            {
                // The web client
                WebClient webClient = new WebClient();

                // Get the html
                string page = webClient.DownloadString("https://www.klart.se/se/s%C3%B6dermanlands-l%C3%A4n/v%C3%A4der-alberga/timmar/");

                // The HTML document
                HtmlDocument htmlDocument = new HtmlDocument();

                // Load the 
                htmlDocument.LoadHtml(page);

                // Set nodes
                HtmlNode article = htmlDocument.DocumentNode.SelectSingleNode($"//article[@id='{DateTime.Now.ToString("yyyy-MM-dd")}']");
                HtmlNode table = article.SelectSingleNode("//table[@class='hours-list']");
                HtmlNode tbody = article.SelectSingleNode("//tbody[@class='content']");

                // The table data list
                List<List<object>> tableDataList = new List<List<object>>();

                // Process row nodes
                foreach (HtmlNode rowHtmlNode in tbody.SelectNodes("tr"))
                {
                    // Column count
                    int columnCount = 0;

                    // THe row data list
                    var rowDataList = new List<object>();

                    // Iterate cells
                    foreach (HtmlNode cellHtmlNode in rowHtmlNode.SelectNodes("th|td"))
                    {
                        // Set processed inner text
                        string cellText = regex.Replace(cellHtmlNode.InnerText.Trim(), string.Empty);

                        // Check length
                        if (cellText.Length > 0)
                        {
                            // Check if it's done
                            if (columnCount == 7)
                            {
                                // halt flow
                                break;
                            }

                            // Has length and it's within working range. Add it
                            rowDataList.Add(cellText);

                            // Raise column count
                            columnCount++;
                        }
                    }

                    // Check there's some data
                    if (rowDataList.Count > 0)
                    {
                        // Add the data list
                        tableDataList.Add(rowDataList);
                    }
                }

                // Check if must display
                if (tableDataList.Count > 0)
                {
                    // Display it to end program
                    ConsoleTableBuilder.From(tableDataList)
                   .WithFormat(ConsoleTableBuilderFormat.Alternative)
                   .ExportAndWriteLine(TableAligntment.Left);
                }
            }
            catch (Exception exception)
            {
                // Report error
                Console.WriteLine($"Error: {exception.Message}");
            }
        }
    }
}